import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:todo/screens/task_data.dart';
import 'package:todo/screens/tasks_screen.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => TaskData(),
      child: MaterialApp(
        home: TaskScreen()
      ),
    );
  }
}


import 'package:flutter/material.dart';
import 'package:todo/widgets.dart';
import 'package:todo/task.dart';
import 'task_data.dart';
import 'package:provider/provider.dart';

class TaskScreen extends StatelessWidget {


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.lightBlueAccent,
      floatingActionButton: FloatingActionButton(onPressed: () { showModalBottomSheet(context: context, builder: (context)=> SingleChildScrollView(
        child: Container(
          padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),
          child: AddTaskScreen((newTaskTitle){
            setState(() {
              tasks.add(Task(name: newTaskTitle));
            });
Navigator.pop(context);
          }),
        )
      )); },backgroundColor: Colors.lightBlueAccent,child: Icon(Icons.add)

      ),
      body: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[ Container(
          padding: EdgeInsets.only(top: 60.0, left: 30.0, right: 30.0, bottom: 30.0),
          child:
          Column(

            children: <Widget>[
              CircleAvatar(child: Icon(Icons.list, size: 30.0,color: Colors.lightBlueAccent,),
              backgroundColor: Colors.white,
              radius: 30.0,),
              SizedBox(height: 10.0,),
              Text('Todo',
              style: TextStyle(
                color: Colors.white,fontSize: 50.0,fontWeight: FontWeight.w700,
              ),),
              Text('${Provider.of<TaskData>(context).taskCount} tasks',style: TextStyle(
                color: Colors.white, fontSize: 18,
              ),),


            ],
          ),
        ),Expanded(
          child: Container(
            padding: EdgeInsets.symmetric(horizontal: 20.0),
            child: TasksList(tasks),
            decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.only(topLeft: Radius.circular(20.0),topRight: Radius.circular(20.0))
            ),
          ),
        )]
      ),
    );
  }
}


import 'package:flutter/material.dart';
import 'package:todo/screens/task_data.dart';
import 'task.dart';
import 'package:provider/provider.dart';


class TasksList extends StatefulWidget {
  late final List<Task> tasks;

  TasksList(this.tasks);

  @override
  _TasksListState createState() => _TasksListState();
}

class _TasksListState extends State<TasksList> {


  @override
  Widget build(BuildContext context) {
    return Consumer<TaskData>(
      builder: (context,taskData,child){
    return ListView.builder(
      itemBuilder: (context, index) {
        final task = taskData.tasks[index];
        return TaskTile(
          isChecked: task.isDone,
          taskTitle: task.name,
          checkboxCallback: (checkboxState) {
            taskData.updateTask(task);
            },
          longPressCallback: (){
            taskData.deleteTask(task);

          },
        );
          },
      itemCount: taskData.taskCount,
        );
      },
    );
  }

}






class TaskTile extends StatelessWidget {
  late final String taskTitle;
  final bool isChecked;
  final void Function(bool?) checkboxCallback;
  final GestureLongPressCallback? longPressCallback;

  TaskTile(
      {required this.isChecked,
      required this.taskTitle,
      required this.checkboxCallback,
      required this.longPressCallback});

  @override
  Widget build(BuildContext context) {
    return ListTile(
      onLongPress: longPressCallback,
      title: Text(
        taskTitle,
        style: TextStyle(
            decoration: isChecked ? TextDecoration.lineThrough : null),
      ),
      trailing: Checkbox(
        activeColor: Colors.lightBlueAccent,
        value: isChecked,
        onChanged: checkboxCallback,
      ),
    );
  }
}

class AddTaskScreen extends StatelessWidget {

  late String newTaskTitle;
 
  @override
  Widget build(BuildContext context) {
    return Container(
        color: Color(0xff757575),
        child: Container(
          padding: EdgeInsets.all(20.0),
          decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.only(
                topLeft: Radius.circular(20.0),
                topRight: Radius.circular(20.0),
              )),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: <Widget>[
              Text(
                'New Task',
                textAlign: TextAlign.center,
                style: TextStyle(color: Colors.lightBlueAccent, fontSize: 30.0),
              ),
              TextField(
                autofocus: true,
                textAlign: TextAlign.center,
                onChanged: (newText){

                  newTaskTitle = newText;
                },
              ),
              TextButton(
                onPressed: () {
                  final task = Task(name: newTaskTitle);
                  Provider.of<TaskData>(context).addTask(newTaskTitle);
                  Navigator.pop(context);
                },
                child: Text('add'),
              )
            ],
          ),
        ));
  }
}


import 'package:flutter/material.dart';
import 'package:todo/task.dart';
import 'package:todo/widgets.dart';
import 'tasks_screen.dart';


class TaskData extends ChangeNotifier{

  List<Task> tasks = [
    Task(name: 'Buy milk'),
    Task(name: 'Buy eggs'),
    Task(name: 'Buy bread'),
  ];

int get taskCount{
  return tasks.length;
}

void addTask(String newTaskTitle){
  final task = Task(name: newTaskTitle);
  tasks.add(task);
  notifyListeners();


}
void updateTask(Task task){

  task.toggleDone();
}
void deleteTask(Task task){
  tasks.remove(task);
  notifyListeners();
}

}


import 'package:flutter/material.dart';

class Task {


  final String name;
  bool isDone;

  Task({required this.name,this.isDone = false});

 void toggleDone() {
    isDone = !isDone;
  }



}


